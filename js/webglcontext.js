(function(exports) {

    // WebGL context stack
    var gl;

    // context signature fallbacks
    var contexts = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];

    exports.WebGLContext = WebGLContext;

    function WebGLContext(gl, width, height) {
        this.ctx            = gl;
        this.viewportWidth  = width;
        this.viewportHeight = height;
        this.shader         = new xWebGLShader(this);
        this.buffer         = new xWebGLBuffer(this);
        this.matrix         = new xWebGLMatrix();
    }

    WebGLContext.create = function(canvas) {
        var size = contexts.length,
            i    = -1;

        while ( contexts[++i] ) {
            try {
                gl = canvas.getContext(contexts[i]);
                console.log('WebGL context generated by ' + contexts[i]);
                break;
            } catch ( e ) {}
        }

        if ( ! gl ) {
            throw new Error('Sorry, WebGL is not supported on your browser.');
        }

        return new WebGLContext(gl, canvas.width, canvas.height);
    };

    WebGLContext.prototype.get = function() {
        return this.ctx;
    };


})(typeof process !== 'undefined' ? module.exports : this);
